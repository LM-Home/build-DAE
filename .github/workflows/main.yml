name: build DAE

on:
  schedule:
    - cron: '05 1 * * *' # 每天1:05触发
  workflow_dispatch:
    inputs:
      branch:
        description: '编译特定分支'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [ '1.23.2' ]
    
    name: Build
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          
      - name: Check for New Version
        id: version_check
        run: |
          # 获取最新的commit ID
          newID=$(curl -s -H "Accept: application/json" "https://github.com/daeuniverse/dae/commits/deferred_commit_data/main?original_branch=main" | jq -r '.deferredCommits[0].oid')
          
          # 读取上次保存的commit ID（如果存在）
          oldID=$(cat commentID 2>/dev/null)
          
          # 输出获取到的ID用于调试
          echo "旧ID: $oldID"
          echo "新ID: $newID"
          
          # 保存新ID到环境变量供后续步骤使用
          echo "newID=$newID" >> $GITHUB_ENV
          
          # 判断是否需要继续构建
          if [ "$newID" = "$oldID" ] && [ -n "$oldID" ]; then
            echo "未检测到新版本，退出构建"
            echo "needs_build=false" >> $GITHUB_OUTPUT
          else
            echo "检测到新版本，继续构建"
            echo "needs_build=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup Go
        if: steps.version_check.outputs.needs_build == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build Go
        if: steps.version_check.outputs.needs_build == 'true'
        env:
          BRANCH: ${{ github.event.inputs.branch }}
        run: |
          set +e
          sudo apt-get update 
          sudo apt-get install -y llvm-15 clang-15 git make
          export CLANG=clang-15
          
          # 克隆仓库
          if [ -n "${BRANCH}" ]; then
            git clone https://github.com/daeuniverse/dae.git -b ${BRANCH} dae
          else 
            git clone https://github.com/daeuniverse/dae.git dae
          fi
          
          # 执行构建
          cd dae
          git submodule update --init
          make OUTPUT=dae-amd64 GOFLAGS="-buildvcs=false" CC=clang CGO_ENABLED=0
          echo "DIR_NAME=$PWD" >> $GITHUB_ENV
  
      - name: Bump Version and Push Tag
        if: steps.version_check.outputs.needs_build == 'true'
        id: bump
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false

      - name: Upload Go to Release
        if: steps.version_check.outputs.needs_build == 'true'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          files: ${{ env.DIR_NAME }}/dae-amd64

      - name: Update Stored Version ID
        if: steps.version_check.outputs.needs_build == 'true'
        run: |
          # 更新保存的ID为新ID
          echo "${{ env.newID }}" > commentID
          git config --global user.email 'action@github.com'
          git config --global user.name ${{ github.actor }}
          git add commentID
          # 检查是否有文件被修改
          if git diff --staged --quiet; then
            echo -e "文件未被修改。"
            exit 0
          else
            git commit -m "Update files"
            git push
            echo -e "上传文件文件成功。"
          fi
          
      - name: Delete Workflow Runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: Remove Old Releases
        if: steps.version_check.outputs.needs_build == 'true'
        uses: dev-drprasad/delete-older-releases@v0.1.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
